{"version":3,"file":"static/js/415.ffb81c8e.chunk.js","mappings":"uQAIe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAW,WAAM,wCACf,8GAEuBC,EAAAA,EAAAA,MAFvB,OAEUC,EAFV,OAGIL,EAAUK,EAAKC,SAHnB,gDAMIC,QAAQC,IAAI,OAAZ,MANJ,0DADe,uBAAC,WAAD,wBAUfC,EACD,GAAE,KAGD,iCACE,eAAIC,UAAU,WAAd,wBACA,eAAIA,UAAU,gBAAd,SACIX,EAAOY,KAAK,SAAAC,GAAK,OACf,eAAmBF,UAAU,QAA7B,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMf,GAAYS,UAAU,YAAtE,SACIE,EAAMK,MAAQL,EAAMK,MAAQL,EAAMM,QAF/BN,EAAME,GADA,QAU1B,C,uGCnCD,IAAMK,EAAY,mCACZC,EAAM,sCAQChB,EAAY,WASvB,OAAOiB,MAAM,+DARG,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GAEJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACJ,EAQYC,EAAW,SAAClB,GAAmB,IAAfmB,EAAc,uDAAP,GAClC,OAAOZ,MAAM,GAAD,OAAID,GAAJ,OAAUN,GAAV,OAAemB,EAAf,oBAAiCd,IAAaO,MAAK,SAAAC,GAC7D,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEF,EAQYG,EAAc,SAACC,GAS1B,OAAOd,MAAM,qDAAD,OAAsDF,EAAtD,kBAAyEgB,EAAzE,8CARI,CACdb,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC1C,OAAOH,EAASI,MACjB,GACJ,C,sBChED,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOnB,KAAKc,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/Home.jsx","resources/moviesData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { allMovies } from \"resources/moviesData\";\n\nexport default function Home () {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect( () => {\n    async function fetchMovies() {\n      try {\n        const data = await allMovies();\n        setMovies(data.results);\n      }\n      catch (error) {\n        console.log(\"Ups!\", error);\n      }\n    }\n    fetchMovies();\n  }, []);\n  \n  return(\n    <>\n      <h4 className=\"titlesH4\">On Demand</h4>\n      <ul className=\"movieNameList\">\n        { movies.map( movie => (\n            <li key={movie.id} className=\"movie\" >\n              <Link to={`/movies/${movie.id}`} state={{ from: location }} className=\"movieLink\" >\n                { movie.title ? movie.title : movie.name }\n              </Link>\n            </li>\n        ))}\n      </ul>\n    </>\n  );\n}","const myKeyTMDB = \"d6590e454f1a3c036ac38972d9d76775\";\nconst url = \"https://api.themoviedb.org/3/movie/\";\n\n\n/*\n  -----------------------------------------\n  Load all movies in Home page\n  -----------------------------------------\n*/\nexport const allMovies = () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjU5MGU0NTRmMWEzYzAzNmFjMzg5NzJkOWQ3Njc3NSIsInN1YiI6IjY0ZTk2M2M2ZWE4OWY1MDExZGM4NGQ5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vsMxFL9CS1dwriiW_wnIpHxml4jrYvwbLkmdkrYIZB8'\n    }\n  };\n\n  return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n    .then(response => {\n      //console.log(\"backend response: \", response);\n      if(!response.ok) {\n        throw new Error(response.status); \n      }\n      return response.json();\n    });\n}\n\n\n/*\n  -----------------------------------------\n  Charged selected movie\n  -----------------------------------------\n*/\nexport const getMovie = (id, option='') => {\n  return fetch(`${url}${id}${option}?api_key=${myKeyTMDB}`).then(response => {\n    if(!response.ok) {\n      throw new Error(response.status); \n    }\n    return response.json();\n  });\n  //'https://api.themoviedb.org/3/movie/11?api_key=d6590e454f1a3c036ac38972d9d76775'\n}\n\n\n/*\n  -----------------------------------------\n  Search a movie by query\n  -----------------------------------------\n*/\nexport const searchMovie = (query) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjU5MGU0NTRmMWEzYzAzNmFjMzg5NzJkOWQ3Njc3NSIsInN1YiI6IjY0ZTk2M2M2ZWE4OWY1MDExZGM4NGQ5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vsMxFL9CS1dwriiW_wnIpHxml4jrYvwbLkmdkrYIZB8'\n    }\n  };\n  \n  return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKeyTMDB}&query=${query}&include_adult=false&language=en-US&page=1`, options)\n    .then(response => {\n      if(!response.ok) throw new Error(response.status);\n      return response.json();\n    });\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Home","useState","movies","setMovies","location","useLocation","useEffect","allMovies","data","results","console","log","fetchMovies","className","map","movie","to","id","state","from","title","name","myKeyTMDB","url","fetch","method","headers","accept","Authorization","then","response","ok","Error","status","json","getMovie","option","searchMovie","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}