{"version":3,"file":"static/js/884.3444eeba.chunk.js","mappings":"uQAMe,SAASA,IAAgB,IAAD,IAC7BC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAUzC,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,IAASV,GAD9B,OACQW,EADR,OAEEP,EAASO,GAFX,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACZ,KAGF,iBAAKa,UAAU,YAAf,WACE,gBAAKA,UAAU,SAAf,UACE,SAAC,KAAD,CAAMC,GAAIT,EAAV,wBAEF,gBAAIQ,UAAU,WAAd,cAA4BV,EAAMY,MAAlC,QACA,kBAAMF,UAAU,OAAhB,cAA0BV,EAAMa,SAAhC,QACA,gBACEC,IAAG,UAxBU,mCAwBV,OAAoBd,EAAMe,eAC7BC,IAAI,qBACJN,UAAU,cAEZ,gBAAIA,UAAU,eAAd,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOD,UAAU,YAA1B,uBAEF,yBACE,SAAC,KAAD,CAAMC,GAAG,UAAUD,UAAU,YAA7B,6BAGJ,SAAC,KAAD,MAGL,C,uGC3CD,IAAMO,EAAY,mCACZC,EAAM,sCAQCC,EAAY,WASvB,OAAOC,MAAM,+DARG,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GAEJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACJ,EAQYvB,EAAW,SAACV,GAAmB,IAAfkC,EAAc,uDAAP,GAClC,OAAOX,MAAM,GAAD,OAAIF,GAAJ,OAAUrB,GAAV,OAAekC,EAAf,oBAAiCd,IAAaQ,MAAK,SAAAC,GAC7D,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEF,EAQYE,EAAc,SAACC,GAS1B,OAAOb,MAAM,qDAAD,OAAsDH,EAAtD,kBAAyEgB,EAAzE,8CARI,CACdZ,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC1C,OAAOH,EAASI,MACjB,GACJ,C,sBChED,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlB,KAAKa,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/MovieDetails.jsx","resources/moviesData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getMovie } from \"resources/moviesData\";\n\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLink = location.state?.from ?? \"/\";\n  \n  useEffect(() => {\n    async function newMovie() {\n      const data = await getMovie(id);\n      setMovie(data);\n    }\n    newMovie();\n  }, [id]);\n\n  return(\n    <div className=\"movieCard\">\n      <div className=\"goBack\">\n        <Link to={backLink}>Go back</Link>\n      </div>\n      <h4 className=\"titlesH4\"> { movie.title } </h4>\n      <span className=\"text\" > {movie.overview} </span>\n      <img\n        src={`${imageBaseURL}${movie.backdrop_path}`}\n        alt=\"Aqui va una imagen\"\n        className=\"imgMovie\"\n      />\n      <ul className=\"otherDetails\">\n        <li>\n          <Link to=\"cast\" className=\"movieLink\" > Cast </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" className=\"movieLink\"> Reviews </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}","const myKeyTMDB = \"d6590e454f1a3c036ac38972d9d76775\";\nconst url = \"https://api.themoviedb.org/3/movie/\";\n\n\n/*\n  -----------------------------------------\n  Load all movies in Home page\n  -----------------------------------------\n*/\nexport const allMovies = () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjU5MGU0NTRmMWEzYzAzNmFjMzg5NzJkOWQ3Njc3NSIsInN1YiI6IjY0ZTk2M2M2ZWE4OWY1MDExZGM4NGQ5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vsMxFL9CS1dwriiW_wnIpHxml4jrYvwbLkmdkrYIZB8'\n    }\n  };\n\n  return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n    .then(response => {\n      //console.log(\"backend response: \", response);\n      if(!response.ok) {\n        throw new Error(response.status); \n      }\n      return response.json();\n    });\n}\n\n\n/*\n  -----------------------------------------\n  Charged selected movie\n  -----------------------------------------\n*/\nexport const getMovie = (id, option='') => {\n  return fetch(`${url}${id}${option}?api_key=${myKeyTMDB}`).then(response => {\n    if(!response.ok) {\n      throw new Error(response.status); \n    }\n    return response.json();\n  });\n  //'https://api.themoviedb.org/3/movie/11?api_key=d6590e454f1a3c036ac38972d9d76775'\n}\n\n\n/*\n  -----------------------------------------\n  Search a movie by query\n  -----------------------------------------\n*/\nexport const searchMovie = (query) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjU5MGU0NTRmMWEzYzAzNmFjMzg5NzJkOWQ3Njc3NSIsInN1YiI6IjY0ZTk2M2M2ZWE4OWY1MDExZGM4NGQ5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vsMxFL9CS1dwriiW_wnIpHxml4jrYvwbLkmdkrYIZB8'\n    }\n  };\n  \n  return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKeyTMDB}&query=${query}&include_adult=false&language=en-US&page=1`, options)\n    .then(response => {\n      if(!response.ok) throw new Error(response.status);\n      return response.json();\n    });\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieDetails","id","useParams","useState","movie","setMovie","backLink","useLocation","state","from","useEffect","getMovie","data","newMovie","className","to","title","overview","src","backdrop_path","alt","myKeyTMDB","url","allMovies","fetch","method","headers","accept","Authorization","then","response","ok","Error","status","json","option","searchMovie","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}