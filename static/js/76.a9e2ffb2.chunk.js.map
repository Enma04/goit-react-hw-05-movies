{"version":3,"file":"static/js/76.a9e2ffb2.chunk.js","mappings":"oPACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA6E,qBAA7E,EAAyG,mB,SCM1F,SAASA,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,IAASN,EAAI,YADlC,OACQO,EADR,OAEEH,EAAQG,EAAKJ,MAFf,4CADc,uBAAC,WAAD,wBAKdK,EACD,GAAE,CAACR,KAGF,eAAIS,UAAWC,EAAf,SACGP,EAAKQ,KAAI,SAAAC,GAAM,OACd,gBAAoBH,UAAWC,EAA/B,WACE,gBACEG,IAAG,UAnBM,mCAmBN,OAAoBD,EAAOE,cAC9BC,IAAI,YACJN,UAAWC,KAEb,kBAAMD,UAAWC,EAAjB,oBAAmCE,EAAOI,KAA1C,QACA,kBAAMP,UAAWC,EAAjB,yBAAwCE,EAAOK,UAA/C,SAPOL,EAAOZ,GADF,KAarB,C,uGClCD,IAAMkB,EAAY,mCACZC,EAAM,sCAQCC,EAAY,WASvB,OAAOC,MAAM,+DARG,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GAEJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACJ,EAQYzB,EAAW,SAACN,GAAmB,IAAfgC,EAAc,uDAAP,GAClC,OAAOX,MAAM,GAAD,OAAIF,GAAJ,OAAUnB,GAAV,OAAegC,EAAf,oBAAiCd,IAAaQ,MAAK,SAAAC,GAC7D,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEF,EAQYE,EAAc,SAACC,GAS1B,OAAOb,MAAM,qDAAD,OAAsDH,EAAtD,kBAAyEgB,EAAzE,8CARI,CACdZ,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC1C,OAAOH,EAASI,MACjB,GACJ,C,sBChED,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlB,KAAKa,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","resources/moviesData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"card\":\"Cast_card__WlXfx\",\"imagen\":\"Cast_imagen__3tHjs\",\"text\":\"Cast_text__P2vgu\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovie } from 'resources/moviesData';\nimport css from './Cast.module.css';\n\nconst imageBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nexport default function Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function newCast() {\n      const data = await getMovie(id, '/credits');\n      setCast(data.cast);\n    }\n    newCast();\n  }, [id]);\n\n  return (\n    <ul className={css.list}>\n      {cast.map(person => (\n        <li key={person.id} className={css.card}>\n          <img\n            src={`${imageBaseURL}${person.profile_path}`}\n            alt=\"Not found\"\n            className={css.imagen}\n          />\n          <span className={css.text}> Name: {person.name} </span>\n          <span className={css.text}> Character: {person.character} </span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","const myKeyTMDB = \"d6590e454f1a3c036ac38972d9d76775\";\nconst url = \"https://api.themoviedb.org/3/movie/\";\n\n\n/*\n  -----------------------------------------\n  Load all movies in Home page\n  -----------------------------------------\n*/\nexport const allMovies = () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjU5MGU0NTRmMWEzYzAzNmFjMzg5NzJkOWQ3Njc3NSIsInN1YiI6IjY0ZTk2M2M2ZWE4OWY1MDExZGM4NGQ5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vsMxFL9CS1dwriiW_wnIpHxml4jrYvwbLkmdkrYIZB8'\n    }\n  };\n\n  return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n    .then(response => {\n      //console.log(\"backend response: \", response);\n      if(!response.ok) {\n        throw new Error(response.status); \n      }\n      return response.json();\n    });\n}\n\n\n/*\n  -----------------------------------------\n  Charged selected movie\n  -----------------------------------------\n*/\nexport const getMovie = (id, option='') => {\n  return fetch(`${url}${id}${option}?api_key=${myKeyTMDB}`).then(response => {\n    if(!response.ok) {\n      throw new Error(response.status); \n    }\n    return response.json();\n  });\n  //'https://api.themoviedb.org/3/movie/11?api_key=d6590e454f1a3c036ac38972d9d76775'\n}\n\n\n/*\n  -----------------------------------------\n  Search a movie by query\n  -----------------------------------------\n*/\nexport const searchMovie = (query) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNjU5MGU0NTRmMWEzYzAzNmFjMzg5NzJkOWQ3Njc3NSIsInN1YiI6IjY0ZTk2M2M2ZWE4OWY1MDExZGM4NGQ5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vsMxFL9CS1dwriiW_wnIpHxml4jrYvwbLkmdkrYIZB8'\n    }\n  };\n  \n  return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKeyTMDB}&query=${query}&include_adult=false&language=en-US&page=1`, options)\n    .then(response => {\n      if(!response.ok) throw new Error(response.status);\n      return response.json();\n    });\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","id","useParams","useState","cast","setCast","useEffect","getMovie","data","newCast","className","css","map","person","src","profile_path","alt","name","character","myKeyTMDB","url","allMovies","fetch","method","headers","accept","Authorization","then","response","ok","Error","status","json","option","searchMovie","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}